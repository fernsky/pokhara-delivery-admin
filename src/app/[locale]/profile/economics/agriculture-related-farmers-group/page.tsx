import { Metadata } from "next";
import { DocsLayout } from "@/components/layout/DocsLayout";
import { TableOfContents } from "@/components/TableOfContents";
import Image from "next/image";
import { api } from "@/trpc/server";
import { localizeNumber } from "@/lib/utils/localize-number";
import FarmersGroupCharts from "./_components/farmers-group-charts";
import FarmersGroupAnalysisSection from "./_components/farmers-group-analysis-section";
import FarmersGroupSEO from "./_components/farmers-group-seo";
import WardBasedFarmsList from "./_components/ward-based-farms-list";

// Force dynamic rendering since we're using tRPC which relies on headers
export const dynamic = "force-dynamic";

// Define the locales for which this page should be statically generated
export async function generateStaticParams() {
  return [{ locale: "en" }];
}

// Optional: Add revalidation period
export const revalidate = 86400; // Revalidate once per day

// Define English names for ward display (for SEO)
const WARD_NAMES_EN: Record<number, string> = {
  1: "Ward 1",
  2: "Ward 2",
  3: "Ward 3",
  4: "Ward 4",
  5: "Ward 5",
  6: "Ward 6",
  7: "Ward 7",
  8: "Ward 8",
  9: "Ward 9",
};

// Define colors for wards
const WARD_COLORS: Record<number, string> = {
  1: "#27ae60", // Green
  2: "#3498db", // Blue
  3: "#9b59b6", // Purple
  4: "#e74c3c", // Red
  5: "#f1c40f", // Yellow
  6: "#d35400", // Orange
  7: "#16a085", // Teal
  8: "#8e44ad", // Deep purple
  9: "#2c3e50", // Slate
};

// Icon types for farmers groups
const GROUP_ICONS: Record<string, string> = {
  "рдХреГрд╖рд┐ рд╕рдореБрд╣": "ЁЯМ╛",
  "рдХреГрд╖рдХ рд╕рдореБрд╣": "ЁЯзСтАНЁЯМ╛",
  "рджрд▓рд┐рдд рдХреГрд╖рдХ рд╕рдореБрд╣": "ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж",
  "рдорд╣рд┐рд▓рд╛ рдХреГрд╖рдХ рд╕рдореБрд╣": "ЁЯСйтАНЁЯМ╛",
  "рджрд▓рд┐рдд рдорд╣рд┐рд▓рд╛ рдХреГрд╖рдХ рд╕рдореБрд╣": "ЁЯСйтАНЁЯСйтАНЁЯСзтАНЁЯСж",
  "рдмрдЪрдд рд╕рдореБрд╣": "ЁЯТ░",
  default: "ЁЯМ▒",
};

// This function will generate metadata dynamically based on the actual data
export async function generateMetadata(): Promise<Metadata> {
  try {
    // Fetch data for SEO using tRPC
    const farmersGroupData =
      await api.profile.economics.municipalityWideAgricultureRelatedFarmersGroup.getAll.query();
    const municipalityName = "рдкреЛрдЦрд░рд╛ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛"; // Pokhara Metropolitan City

    // Process data for SEO
    const totalGroups = farmersGroupData.length;

    // Calculate ward distribution
    const wardDistribution = farmersGroupData.reduce(
      (acc: Record<number, number>, item: { wardNumber: number }) => {
        acc[item.wardNumber] = (acc[item.wardNumber] || 0) + 1;
        return acc;
      },
      {},
    );

    // Find ward with most groups
    let wardWithMostGroups = 0;
    let wardMaxCount = 0;
    Object.entries(wardDistribution).forEach(([ward, count]) => {
      if (Number(count) > wardMaxCount) {
        wardMaxCount = Number(count);
        wardWithMostGroups = Number(ward);
      }
    });

    // Create rich keywords with actual data
    const keywordsNP = [
      "рдкреЛрдЦрд░рд╛ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛ рдХреГрд╖рд┐ рд╕рдореВрд╣",
      "рдкреЛрдЦрд░рд╛ рдХреГрд╖рд┐ рд╕рдореВрд╣",
      "рдкрд╛рд▓рд┐рдХрд╛ рд╕реНрддрд░реАрдп рдХреГрд╖рд┐ рд╕рдореВрд╣",
      "рдкреЛрдЦрд░рд╛ рдХреГрд╖рдХ рд╕рдореБрджрд╛рдп",
      `рдкреЛрдЦрд░рд╛ рдХреГрд╖рд┐ рд╡рд┐рдХрд╛рд╕`,
      `рд╡рдбрд╛ ${localizeNumber(wardWithMostGroups.toString(), "ne")} рдХреГрд╖рд┐ рд╕рдореВрд╣`,
      `рдкреЛрдЦрд░рд╛ ${localizeNumber(totalGroups.toString(), "ne")} рдХреГрд╖рд┐ рд╕рдореВрд╣`,
      "рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣",
    ];

    const keywordsEN = [
      "Pokhara Metropolitan City farmers groups",
      "Pokhara agriculture groups",
      "Municipality-wide agricultural groups",
      "Farming groups in Pokhara",
      `Agricultural development in Pokhara`,
      `Ward ${wardWithMostGroups} farming groups`,
      `Pokhara ${totalGroups} agricultural groups`,
      "Agriculture related groups",
    ];

    // Create detailed description with actual data
    const descriptionNP = `рдкреЛрдЦрд░рд╛ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛рдорд╛ рд╕рдВрдЪрд╛рд▓рд┐рдд ${localizeNumber(totalGroups.toString(), "ne")} рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВрдХреЛ рд╡рд┐рд╕реНрддреГрдд рд╡рд┐рд╢реНрд▓реЗрд╖рдгред рд╡рдбрд╛ рдирдВ ${localizeNumber(wardWithMostGroups.toString(), "ne")} рдорд╛ рд╕рдмреИрднрдиреНрджрд╛ рдмрдвреА ${localizeNumber(wardMaxCount.toString(), "ne")} рд╕рдореВрд╣рд╣рд░реВ рдХреНрд░рд┐рдпрд╛рд╢реАрд▓ рдЫрдиреНред рдкрд╛рд▓рд┐рдХрд╛ рд╕реНрддрд░реАрдп рдХреГрд╖рд┐ рд╕рдореВрд╣рд╣рд░реВрдХреЛ рд╡рд┐рд╕реНрддреГрдд рдЬрд╛рдирдХрд╛рд░реАред`;

    const descriptionEN = `Detailed analysis of ${totalGroups} agriculture related farmers groups operating in Pokhara Metropolitan City. Ward ${wardWithMostGroups} has the highest concentration with ${wardMaxCount} active groups. Comprehensive information on municipality-wide agricultural groups.`;

    return {
      title: `рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВ | ${municipalityName} рдбрд┐рдЬрд┐рдЯрд▓ рдкреНрд░реЛрдлрд╛рдЗрд▓`,
      description: descriptionNP,
      keywords: [...keywordsNP, ...keywordsEN],
      alternates: {
        canonical: "/profile/economics/agriculture-related-farmers-group",
        languages: {
          en: "/en/profile/economics/agriculture-related-farmers-group",
          ne: "/ne/profile/economics/agriculture-related-farmers-group",
        },
      },
      openGraph: {
        title: `рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВ | ${municipalityName}`,
        description: descriptionNP,
        type: "article",
        locale: "ne_NP",
        alternateLocale: "en_US",
        siteName: `${municipalityName} рдбрд┐рдЬрд┐рдЯрд▓ рдкреНрд░реЛрдлрд╛рдЗрд▓`,
      },
      twitter: {
        card: "summary_large_image",
        title: `рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВ | ${municipalityName}`,
        description: descriptionNP,
      },
    };
  } catch (error) {
    // Fallback metadata if data fetching fails
    return {
      title: "рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВ | рдкреЛрдЦрд░рд╛ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛ рдбрд┐рдЬрд┐рдЯрд▓ рдкреНрд░реЛрдлрд╛рдЗрд▓",
      description: "рдкрд╛рд▓рд┐рдХрд╛ рд╕реНрддрд░реАрдп рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВрдХреЛ рд╡рд┐рд╡рд░рдг рд░ рд╡рд┐рд╢реНрд▓реЗрд╖рдгред",
    };
  }
}

const toc = [
  { level: 2, text: "рдкрд░рд┐рдЪрдп", slug: "introduction" },
  {
    level: 2,
    text: "рд╡рдбрд╛рдЧрдд рд╡рд┐рддрд░рдг",
    slug: "ward-distribution",
  },
  { level: 2, text: "рд╕рдореВрд╣ рдкреНрд░реЛрдлрд╛рдЗрд▓", slug: "group-profile" },
  { level: 2, text: "рдЖрд░реНрдерд┐рдХ рдкреНрд░рднрд╛рд╡", slug: "economic-impact" },
  {
    level: 2,
    text: "рдЪреБрдиреМрддреА рд░ рдЕрд╡рд╕рд░рд╣рд░реВ",
    slug: "challenges-and-opportunities",
  },
  {
    level: 2,
    text: "рдирд┐рд╖реНрдХрд░реНрд╖ рд░ рд╕рд┐рдлрд╛рд░рд┐рд╕рд╣рд░реВ",
    slug: "conclusions-and-recommendations",
  },
];

export default async function AgricultureRelatedFarmersGroupPage() {
  // Fetch all farmers group data using tRPC
  const farmersGroupData =
    await api.profile.economics.municipalityWideAgricultureRelatedFarmersGroup.getAll.query();

  const totalGroups = farmersGroupData.length;

  // Calculate ward distribution
  const wardDistribution = farmersGroupData.reduce(
    (acc: Record<number, number>, item: { wardNumber: number }) => {
      acc[item.wardNumber] = (acc[item.wardNumber] || 0) + 1;
      return acc;
    },
    {},
  );

  // Determine group types based on name patterns
  const getGroupType = (name: string) => {
    if (name.includes("рдорд╣рд┐рд▓рд╛") && name.includes("рджрд▓рд┐рдд"))
      return "рджрд▓рд┐рдд рдорд╣рд┐рд▓рд╛ рдХреГрд╖рдХ рд╕рдореБрд╣";
    if (name.includes("рдорд╣рд┐рд▓рд╛")) return "рдорд╣рд┐рд▓рд╛ рдХреГрд╖рдХ рд╕рдореБрд╣";
    if (name.includes("рджрд▓рд┐рдд")) return "рджрд▓рд┐рдд рдХреГрд╖рдХ рд╕рдореБрд╣";
    if (name.includes("рдмрдЪрдд")) return "рдмрдЪрдд рд╕рдореБрд╣";
    if (name.includes("рдХреГрд╖рд┐")) return "рдХреГрд╖рд┐ рд╕рдореБрд╣";
    return "рдХреГрд╖рдХ рд╕рдореБрд╣";
  };

  // Count group types
  const groupTypeCount = farmersGroupData.reduce(
    (acc: Record<string, number>, item: { name: string }) => {
      const type = getGroupType(item.name);
      acc[type] = (acc[type] || 0) + 1;
      return acc;
    },
    {},
  );

  // Create group type summary
  type GroupSummaryType = {
    type: string;
    count: number;
    percentage: number;
    icon: string;
  };

  const groupSummary: GroupSummaryType[] = Object.entries(groupTypeCount)
    .map(([type, count]) => {
      return {
        type,
        count: count as number,
        percentage: ((count as number) / totalGroups) * 100,
        icon: GROUP_ICONS[type] || GROUP_ICONS["default"],
      };
    })
    .sort((a, b) => b.count - a.count); // Sort by count descending

  // Organize farms by ward
  type WardFarmsType = {
    wardNumber: number;
    farmCount: number;
    farms: {
      id: string;
      name: string;
      type: string;
      icon: string;
    }[];
  };

  const farmsByWard: WardFarmsType[] = [];

  // Process all 9 wards (whether they have farms or not)
  for (let ward = 1; ward <= 9; ward++) {
    const wardFarms = farmersGroupData
      .filter((farm: { wardNumber: number }) => farm.wardNumber === ward)
      .map((farm: { id: string; name: string }) => {
        const type = getGroupType(farm.name);
        return {
          id: farm.id,
          name: farm.name,
          type: type,
          icon: GROUP_ICONS[type] || GROUP_ICONS["default"],
        };
      });

    farmsByWard.push({
      wardNumber: ward,
      farmCount: wardFarms.length,
      farms: wardFarms,
    });
  }

  // Sort wards by farm count (descending)
  farmsByWard.sort((a, b) => b.farmCount - a.farmCount);

  // Find popular group types by ward
  const popularGroupByWard = farmsByWard.map((ward) => {
    const groupTypes = ward.farms.reduce(
      (acc: Record<string, number>, farm) => {
        acc[farm.type] = (acc[farm.type] || 0) + 1;
        return acc;
      },
      {},
    );

    // Find most common group type in this ward
    let mostCommonType = "";
    let maxCount = 0;

    Object.entries(groupTypes).forEach(([type, count]) => {
      if (count > maxCount) {
        maxCount = count;
        mostCommonType = type;
      }
    });

    return {
      wardNumber: ward.wardNumber,
      mostCommonType,
      count: maxCount,
      icon: GROUP_ICONS[mostCommonType] || GROUP_ICONS["default"],
    };
  });

  // Calculate statistics
  const statistics = {
    totalGroups,
    totalWards: Object.keys(wardDistribution).length,
    avgGroupsPerWard: totalGroups / 9, // Pokhara has 9 wards
    mostPopularGroupType: groupSummary.length > 0 ? groupSummary[0].type : "",
    mostPopularGroupTypePercentage:
      groupSummary.length > 0 ? groupSummary[0].percentage : 0,
    wardWithMostGroups: farmsByWard.length > 0 ? farmsByWard[0].wardNumber : 0,
    maximumGroupsInAWard: farmsByWard.length > 0 ? farmsByWard[0].farmCount : 0,
  };

  return (
    <DocsLayout toc={<TableOfContents toc={toc} />}>
      {/* Add structured data for SEO */}
      <FarmersGroupSEO
        groupSummary={groupSummary}
        totalGroups={totalGroups}
        farmsByWard={farmsByWard}
        statistics={statistics}
        WARD_NAMES_EN={WARD_NAMES_EN}
      />

      <div className="flex flex-col gap-8">
        <section>
          <div className="relative rounded-lg overflow-hidden mb-8">
            <Image
              src="/images/agriculture.svg"
              width={1200}
              height={400}
              alt="рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВ - рдкреЛрдЦрд░рд╛ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛ (Agriculture Related Farmers Groups - Pokhara Metropolitan City)"
              className="w-full h-[250px] object-cover rounded-sm"
              priority
            />
          </div>

          <div className="prose prose-slate dark:prose-invert max-w-none">
            <h1 className="scroll-m-20 tracking-tight mb-6">
              рдкреЛрдЦрд░рд╛ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛рдорд╛ рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВ
            </h1>

            <h2 id="introduction" className="scroll-m-20">
              рдкрд░рд┐рдЪрдп
            </h2>
            <p>
              рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВ рдкреЛрдЦрд░рд╛ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛рдХреЛ рдЖрд░реНрдерд┐рдХ рд╡рд┐рдХрд╛рд╕рдорд╛
              рдорд╣рддреНрддреНрд╡рдкреВрд░реНрдг рднреВрдорд┐рдХрд╛ рдирд┐рд░реНрд╡рд╛рд╣ рдЧрд░рд┐рд░рд╣реЗрдХрд╛ рдЫрдиреНред рдпрд╕ рдЧрд╛рдЙрдБрдкрд╛рд▓рд┐рдХрд╛рдорд╛ рд░рд╣реЗрдХрд╛
              рд╡рд┐рднрд┐рдиреНрди рдХреГрд╖рдХ рд╕рдореВрд╣, рдорд╣рд┐рд▓рд╛ рдХреГрд╖рдХ рд╕рдореВрд╣, рджрд▓рд┐рдд рдХреГрд╖рдХ рд╕рдореВрд╣ рд▓рдЧрд╛рдпрддрдХрд╛ рд╕рдВрдЧрдард┐рдд
              рд╕рдореВрд╣рд╣рд░реВрд▓реЗ рдХреГрд╖рд┐ рдЙрддреНрдкрд╛рджрди рд░ рд╡рд┐рдХрд╛рд╕рдорд╛ рдпреЛрдЧрджрд╛рди рдкреБрд░реНтАНрдпрд╛рдЗрд░рд╣реЗрдХрд╛ рдЫрдиреНред
            </p>
            <p>
              рдпреА рд╕рдореВрд╣рд╣рд░реВрд▓реЗ рд╕реНрдерд╛рдиреАрдп рд╕реНрддрд░рдорд╛ рдХреГрд╖рд┐ рдкреНрд░рд╡рд┐рдзрд┐, рдмреАрдЙ рдмрд┐рдЬрди рд╡рд┐рддрд░рдг, рддрд╛рд▓рд┐рдо,
              рдХреНрд╖рдорддрд╛ рд╡рд┐рдХрд╛рд╕, рд░ рдЙрддреНрдкрд╛рджрд┐рдд рд╡рд╕реНрддреБрд╣рд░реВрдХреЛ рдмрдЬрд╛рд░реАрдХрд░рдгрдорд╛ рд╕рд╣рдпреЛрдЧ рдЧрд░реНрджреИ рдЖрдЗрд░рд╣реЗрдХрд╛
              рдЫрдиреНред рдпрд╕ рдкреГрд╖реНрдардорд╛ рдЧрд╛рдЙрдБрдкрд╛рд▓рд┐рдХрд╛рдорд╛ рд╕рдВрдЪрд╛рд▓рд┐рдд рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╡рд┐рднрд┐рдиреНрди
              рд╕рдореВрд╣рд╣рд░реВрдХреЛ рд╡рд┐рд╕реНрддреГрдд рд╡рд┐рд╡рд░рдг рд░ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдкреНрд░рд╕реНрддреБрдд рдЧрд░рд┐рдПрдХреЛ рдЫред
            </p>

            <p>
              рдкреЛрдЦрд░рд╛ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛рдорд╛ рдХреБрд▓{" "}
              {localizeNumber(totalGroups.toString(), "ne")} рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд
              рд╕рдореВрд╣рд╣рд░реВ рд░рд╣реЗрдХрд╛ рдЫрдиреН, рдЬрд╕рдордзреНрдпреЗ рд╡рдбрд╛ рдирдВ.{" "}
              {localizeNumber(statistics.wardWithMostGroups.toString(), "ne")}{" "}
              рдорд╛{" "}
              {localizeNumber(statistics.maximumGroupsInAWard.toString(), "ne")}{" "}
              рд╡рдЯрд╛ рд╕рдореВрд╣рд╣рд░реВ рд░рд╣реЗрдХрд╛ рдЫрдиреНред
            </p>

            <h2 id="ward-distribution" className="scroll-m-20 border-b pb-2">
              рд╡рдбрд╛рдЧрдд рд╡рд┐рддрд░рдг
            </h2>
            <p>
              рдкреЛрдЦрд░рд╛ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛рдХрд╛ рд╡рд┐рднрд┐рдиреНрди рд╡рдбрд╛рд╣рд░реВрдорд╛ рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВрдХреЛ
              рд╡рд┐рддрд░рдг рдЕрд╕рдорд╛рди рд░рд╣реЗрдХреЛ рдЫред рд╡рдбрд╛ рдирдВ.{" "}
              {localizeNumber(statistics.wardWithMostGroups.toString(), "ne")}{" "}
              рдорд╛ рд╕рдмреИрднрдиреНрджрд╛ рдмрдвреА{" "}
              {localizeNumber(statistics.maximumGroupsInAWard.toString(), "ne")}{" "}
              рд╕рдореВрд╣рд╣рд░реВ рд░рд╣реЗрдХрд╛ рдЫрдиреНред
            </p>

            <p>
              рдЧрд╛рдЙрдБрдкрд╛рд▓рд┐рдХрд╛рдХреЛ рдФрд╕рддрдорд╛ рдкреНрд░рддреНрдпреЗрдХ рд╡рдбрд╛рдорд╛{" "}
              {localizeNumber(statistics.avgGroupsPerWard.toFixed(1), "ne")}{" "}
              рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВ рдХреНрд░рд┐рдпрд╛рд╢реАрд▓ рдЫрдиреНред рд╡рдбрд╛рдЧрдд рд╡рд┐рддрд░рдг рд░ рддрд┐рдирдорд╛ рд╕рдВрдЪрд╛рд▓рд┐рдд
              рд╕рдореВрд╣рд╣рд░реВрдХреЛ рд╡рд┐рд╕реНрддреГрдд рд╡рд┐рд╡рд░рдг рддрд▓ рдкреНрд░рд╕реНрддреБрдд рдЧрд░рд┐рдПрдХреЛ рдЫред
            </p>
          </div>

          {/* Client component for charts */}
          <FarmersGroupCharts
            groupSummary={groupSummary}
            totalGroups={totalGroups}
            farmsByWard={farmsByWard}
            WARD_COLORS={WARD_COLORS}
            popularGroupByWard={popularGroupByWard}
            statistics={statistics}
          />

          {/* Ward-based farms list component */}
          <WardBasedFarmsList
            farmsByWard={farmsByWard}
            WARD_COLORS={WARD_COLORS}
            GROUP_ICONS={GROUP_ICONS}
            statistics={statistics}
            popularGroupByWard={popularGroupByWard}
          />

          <div className="prose prose-slate dark:prose-invert max-w-none mt-8">
            <FarmersGroupAnalysisSection
              groupSummary={groupSummary}
              totalGroups={totalGroups}
              farmsByWard={farmsByWard}
              WARD_COLORS={WARD_COLORS}
              WARD_NAMES_EN={WARD_NAMES_EN}
              statistics={statistics}
              popularGroupByWard={popularGroupByWard}
            />

            <h2
              id="challenges-and-opportunities"
              className="scroll-m-20 border-b pb-2 mt-12"
            >
              рдЪреБрдиреМрддреА рд░ рдЕрд╡рд╕рд░рд╣рд░реВ
            </h2>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
              <div>
                <h3 className="text-xl font-semibold">рдореБрдЦреНрдп рдЪреБрдиреМрддреАрд╣рд░реВ</h3>
                <ul className="space-y-2 mt-4">
                  <li className="flex gap-2">
                    <span className="text-red-500">тАв</span>
                    <span>
                      <strong>рдкреНрд░рд╛рд╡рд┐рдзрд┐рдХ рдЬреНрдЮрд╛рдирдХреЛ рдХрдореА:</strong> рдЖрдзреБрдирд┐рдХ рдХреГрд╖рд┐
                      рдкреНрд░рд╡рд┐рдзрд┐ рд░ рдЬреНрдЮрд╛рдирдХреЛ рдХрдореАрд▓реЗ рдЙрддреНрдкрд╛рджрдХрддреНрд╡ рд╡реГрджреНрдзрд┐рдорд╛ рдмрд╛рдзрд╛
                    </span>
                  </li>
                  <li className="flex gap-2">
                    <span className="text-red-500">тАв</span>
                    <span>
                      <strong>рдмрдЬрд╛рд░реАрдХрд░рдгрдХреЛ рд╕рдорд╕реНрдпрд╛:</strong> рдЙрддреНрдкрд╛рджрд┐рдд рд╡рд╕реНрддреБрд╣рд░реВрдХреЛ
                      рдЙрдЪрд┐рдд рдореВрд▓реНрдп рд░ рдмрдЬрд╛рд░ рдкрд╣реБрдБрдЪрдХреЛ рдХрдореА
                    </span>
                  </li>
                  <li className="flex gap-2">
                    <span className="text-red-500">тАв</span>
                    <span>
                      <strong>рдЖрд░реНрдерд┐рдХ рд╕реНрд░реЛрддрдХреЛ рдЕрднрд╛рд╡:</strong> рд╕рдореВрд╣рд╣рд░реВрдХреЛ рдХреНрд╖рдорддрд╛
                      рд╡рд┐рдХрд╛рд╕ рд░ рдЖрдзреБрдирд┐рдХреАрдХрд░рдгрдХрд╛ рд▓рд╛рдЧрд┐ рдкреВрдБрдЬреАрдХреЛ рдХрдореА
                    </span>
                  </li>
                  <li className="flex gap-2">
                    <span className="text-red-500">тАв</span>
                    <span>
                      <strong>рд╕рдордиреНрд╡рдпрдХреЛ рдХрдореА:</strong> рд╕реНрдерд╛рдиреАрдп рд╕рд░рдХрд╛рд░ рд░ рд╕рдореВрд╣рд╣рд░реВ рдмреАрдЪ
                      рдкреНрд░рднрд╛рд╡рдХрд╛рд░реА рд╕рдордиреНрд╡рдп рд░ рд╕рд╣рдХрд╛рд░реНрдпрдХреЛ рдЕрднрд╛рд╡
                    </span>
                  </li>
                </ul>
              </div>

              <div>
                <h3 className="text-xl font-semibold">рдЕрд╡рд╕рд░рд╣рд░реВ</h3>
                <ul className="space-y-2 mt-4">
                  <li className="flex gap-2">
                    <span className="text-green-500">тАв</span>
                    <span>
                      <strong>рд╕рд╛рдореВрд╣рд┐рдХ рдЦреЗрддреА:</strong> рд╕рдореВрд╣рдорд╛ рдЖрдзрд╛рд░рд┐рдд рдХреГрд╖рд┐ рдЙрддреНрдкрд╛рджрди
                      рд░ рдмрдЬрд╛рд░реАрдХрд░рдгрдХреЛ рдЕрд╡рд╕рд░
                    </span>
                  </li>
                  <li className="flex gap-2">
                    <span className="text-green-500">тАв</span>
                    <span>
                      <strong>рдЬреНрдЮрд╛рди рд░ рдЕрдиреБрднрд╡ рдЖрджрд╛рдирдкреНрд░рджрд╛рди:</strong> рд╕рдореВрд╣ рд╕рджрд╕реНрдпрд╣рд░реВ
                      рдмреАрдЪ рд╕рд┐рдХрд╛рдЗ рд░ рдЕрдиреБрднрд╡ рдЖрджрд╛рдирдкреНрд░рджрд╛рдирдХреЛ рдЕрд╡рд╕рд░
                    </span>
                  </li>
                  <li className="flex gap-2">
                    <span className="text-green-500">тАв</span>
                    <span>
                      <strong>рд╕рд╣реБрд▓рд┐рдпрдд рд░ рдЕрдиреБрджрд╛рди:</strong> рд╕рдореВрд╣рдЧрдд рд░реВрдкрдорд╛ рд╕рд░рдХрд╛рд░реА
                      рд╕рд╣реБрд▓рд┐рдпрдд рд░ рдЕрдиреБрджрд╛рди рдкреНрд░рд╛рдкреНрддрд┐рдХреЛ рдЕрд╡рд╕рд░
                    </span>
                  </li>
                  <li className="flex gap-2">
                    <span className="text-green-500">тАв</span>
                    <span>
                      <strong>рдореВрд▓реНрдп рд╢реГрдЩреНрдЦрд▓рд╛ рд╡рд┐рдХрд╛рд╕:</strong> рдХреГрд╖рд┐ рдЙрддреНрдкрд╛рджрдирдХреЛ
                      рдкреНрд░рд╢реЛрдзрди рд░ рдореВрд▓реНрдп рд╢реГрдЩреНрдЦрд▓рд╛ рд╡рд┐рдХрд╛рд╕рдХреЛ рд╕рдореНрднрд╛рд╡рдирд╛
                    </span>
                  </li>
                </ul>
              </div>
            </div>

            <h2
              id="conclusions-and-recommendations"
              className="scroll-m-20 border-b pb-2 mt-12"
            >
              рдирд┐рд╖реНрдХрд░реНрд╖ рд░ рд╕рд┐рдлрд╛рд░рд┐рд╕рд╣рд░реВ
            </h2>

            <p>
              рдкреЛрдЦрд░рд╛ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛рдорд╛ рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВрдХреЛ рдЕрд╡рд╕реНрдерд╛рдХреЛ рд╡рд┐рд╢реНрд▓реЗрд╖рдгрдмрд╛рдЯ
              рдирд┐рдореНрди рдирд┐рд╖реНрдХрд░реНрд╖ рд░ рд╕рд┐рдлрд╛рд░рд┐рд╕рд╣рд░реВ рдкреНрд░рд╕реНрддреБрдд рдЧрд░рд┐рдПрдХрд╛ рдЫрдиреН:
            </p>

            <div className="pl-6 space-y-4">
              <div className="flex">
                <span className="font-bold mr-2">рез.</span>
                <div>
                  <strong>рдХреНрд╖рдорддрд╛ рд╡рд┐рдХрд╛рд╕:</strong> рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВрдХреЛ рд▓рд╛рдЧрд┐
                  рдирд┐рдпрдорд┐рдд рддрд╛рд▓рд┐рдо рд░ рдХреНрд╖рдорддрд╛ рд╡рд┐рдХрд╛рд╕рдХрд╛ рдХрд╛рд░реНрдпрдХреНрд░рдорд╣рд░реВ рд╕рдВрдЪрд╛рд▓рди рдЧрд░реНрдиреБрдкрд░реНрдиреЗред
                </div>
              </div>
              <div className="flex">
                <span className="font-bold mr-2">реи.</span>
                <div>
                  <strong>рдмрдЬрд╛рд░реАрдХрд░рдг рд╕рд╣рдпреЛрдЧ:</strong> рдЙрддреНрдкрд╛рджрд┐рдд рд╡рд╕реНрддреБрд╣рд░реВрдХреЛ
                  рдмрдЬрд╛рд░реАрдХрд░рдгрдХрд╛ рд▓рд╛рдЧрд┐ рд╕реНрдерд╛рдиреАрдп рдмрдЬрд╛рд░ рдХреЗрдиреНрджреНрд░ рд╕реНрдерд╛рдкрдирд╛ рдЧрд░реНрди рд░ рдмрдЬрд╛рд░ рд╕реВрдЪрдирд╛
                  рдкреНрд░рдгрд╛рд▓реАрдХреЛ рд╡рд┐рдХрд╛рд╕ рдЧрд░реНрди рдЖрд╡рд╢реНрдпрдХ рдЫред
                </div>
              </div>
              <div className="flex">
                <span className="font-bold mr-2">рей.</span>
                <div>
                  <strong>рд╡рдбрд╛рдЧрдд рд╕рдиреНрддреБрд▓рди:</strong> рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВ рдХрдо рднрдПрдХрд╛
                  рд╡рдбрд╛рд╣рд░реВрдорд╛ рдирдпрд╛рдБ рд╕рдореВрд╣ рдЧрдарди рд░ рдХреНрд╖рдорддрд╛ рд╡рд┐рдХрд╛рд╕рдорд╛ рдЬреЛрдб рджрд┐рдиреБрдкрд░реНрдиреЗред
                </div>
              </div>
              <div className="flex">
                <span className="font-bold mr-2">рек.</span>
                <div>
                  <strong>рд╕рдореВрд╣ рдиреЗрдЯрд╡рд░реНрдХрд┐рдЩ:</strong> рд╡рд┐рднрд┐рдиреНрди рд╡рдбрд╛рдорд╛ рд░рд╣реЗрдХрд╛ рдХреГрд╖рд┐
                  рд╕рдореВрд╣рд╣рд░реВ рдмреАрдЪ рдЕрдиреБрднрд╡ рдЖрджрд╛рдирдкреНрд░рджрд╛рди рд░ рд╕рд╣рдХрд╛рд░реНрдпрдХрд╛ рд▓рд╛рдЧрд┐ рдиреЗрдЯрд╡рд░реНрдХ рд╕реНрдерд╛рдкрдирд╛
                  рдЧрд░реНрдиреБрдкрд░реНрдиреЗред
                </div>
              </div>
              <div className="flex">
                <span className="font-bold mr-2">рел.</span>
                <div>
                  <strong>рдЙрддреНрдкрд╛рджрди рд╡реГрджреНрдзрд┐ рдХрд╛рд░реНрдпрдХреНрд░рдо:</strong> рдЖрдзреБрдирд┐рдХ рдХреГрд╖рд┐
                  рдкреНрд░рд╡рд┐рдзрд┐, рдЙрдиреНрдирдд рдмреАрдЙ рд░ рдкреНрд░рд╛рдЩреНрдЧрд╛рд░рд┐рдХ рдЦреЗрддреАрдорд╛ рдЖрдзрд╛рд░рд┐рдд рдЙрддреНрдкрд╛рджрди рд╡реГрджреНрдзрд┐
                  рдХрд╛рд░реНрдпрдХреНрд░рдо рд╕рдВрдЪрд╛рд▓рди рдЧрд░реНрдиреБрдкрд░реНрдиреЗред
                </div>
              </div>
            </div>

            <p className="mt-6">
              рдкреЛрдЦрд░рд╛ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛рдорд╛ рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВрдХреЛ рд╕реБрджреГрдвреАрдХрд░рдг рд░ рдХреНрд╖рдорддрд╛
              рд╡рд┐рдХрд╛рд╕рд▓реЗ рд╕реНрдерд╛рдиреАрдп рдХреГрд╖рд┐ рдЙрддреНрдкрд╛рджрди рд╡реГрджреНрдзрд┐, рд░реЛрдЬрдЧрд╛рд░реА рд╕рд┐рд░реНрдЬрдирд╛ рд░ рдЦрд╛рджреНрдп
              рд╕реБрд░рдХреНрд╖рд╛рдорд╛ рдорд╣рддреНрддреНрд╡рдкреВрд░реНрдг рдпреЛрдЧрджрд╛рди рдкреБрд░реНтАНрдпрд╛рдЙрдиреЗрдЫред рдпрд╕рдХрд╛ рд▓рд╛рдЧрд┐ рд╕реНрдерд╛рдиреАрдп
              рд╕рд░рдХрд╛рд░, рдХреГрд╖рд┐ рд╕реЗрд╡рд╛ рдХреЗрдиреНрджреНрд░ рд░ рдХреГрд╖рд┐ рд╕рдореВрд╣рд╣рд░реВ рдмреАрдЪ рдирд┐рд░рдиреНрддрд░ рд╕рд╣рдХрд╛рд░реНрдп рд░
              рд╕рдордиреНрд╡рдп рдЖрд╡рд╢реНрдпрдХ рдЫред
            </p>
          </div>
        </section>
      </div>
    </DocsLayout>
  );
}

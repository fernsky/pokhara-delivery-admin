import Link from "next/link";
import { localizeNumber } from "@/lib/utils/localize-number";

interface FarmersGroupAnalysisSectionProps {
  groupSummary: Array<{
    type: string;
    count: number;
    percentage: number;
    icon: string;
  }>;
  totalGroups: number;
  farmsByWard: Array<{
    wardNumber: number;
    farmCount: number;
    farms: Array<{
      id: string;
      name: string;
      type: string;
      icon: string;
    }>;
  }>;
  WARD_COLORS: Record<number, string>;
  WARD_NAMES_EN: Record<number, string>;
  statistics: {
    totalGroups: number;
    totalWards: number;
    avgGroupsPerWard: number;
    mostPopularGroupType: string;
    mostPopularGroupTypePercentage: number;
    wardWithMostGroups: number;
    maximumGroupsInAWard: number;
  };
  popularGroupByWard: Array<{
    wardNumber: number;
    mostCommonType: string;
    count: number;
    icon: string;
  }>;
}

export default function FarmersGroupAnalysisSection({
  groupSummary,
  totalGroups,
  farmsByWard,
  WARD_COLORS,
  WARD_NAMES_EN,
  statistics,
  popularGroupByWard,
}: FarmersGroupAnalysisSectionProps) {
  // Find primary and secondary group types
  const primaryGroup = groupSummary.length > 0 ? groupSummary[0] : null;
  const secondaryGroup = groupSummary.length > 1 ? groupSummary[1] : null;

  // Find most concentrated ward (most groups per total municipality groups)
  const mostConcentratedWard = farmsByWard.find(
    (ward) => ward.wardNumber === statistics.wardWithMostGroups,
  );

  // Find wards with no groups
  const wardsWithNoGroups = farmsByWard.filter((ward) => ward.farmCount === 0);

  // Calculate ward distribution inequality (Gini coefficient-like measure)
  const totalFarmsDistributed = farmsByWard.reduce(
    (sum, ward) => sum + ward.farmCount,
    0,
  );
  const perfectDistribution = totalFarmsDistributed / farmsByWard.length;
  const wardDeviation = farmsByWard
    .map((ward) => Math.abs(ward.farmCount - perfectDistribution))
    .reduce((sum, deviation) => sum + deviation, 0);
  const maxPossibleDeviation =
    perfectDistribution * farmsByWard.length * (1 - 1 / farmsByWard.length);
  const inequalityIndex =
    maxPossibleDeviation > 0 ? wardDeviation / maxPossibleDeviation : 0;

  // Calculate group type diversity index (Shannon diversity index-like)
  const groupTypesCount = groupSummary.length;
  const groupEvenness =
    groupSummary.reduce((entropy, group) => {
      const proportion = group.count / totalGroups;
      return entropy - proportion * Math.log(proportion);
    }, 0) / Math.log(groupTypesCount);

  // SEO attributes to include in JSX
  const seoAttributes = {
    "data-municipality": "Khajura metropolitan city / рдкреЛрдЦрд░рд╛ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛",
    "data-total-groups": totalGroups.toString(),
    "data-most-common-group": primaryGroup?.type || "",
    "data-ward-distribution": farmsByWard
      .map((w) => `${w.wardNumber}:${w.farmCount}`)
      .join(";"),
  };

  return (
    <>
      <h2 id="group-profile" className="scroll-m-20 border-b pb-2 mt-12">
        рд╕рдореВрд╣ рдкреНрд░реЛрдлрд╛рдЗрд▓
      </h2>

      <p className="mt-4">
        рдкреЛрдЦрд░рд╛ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛рдХрд╛ рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВрд▓реЗ рдХреГрд╖рд┐ рдЙрддреНрдкрд╛рджрди, рдмрдЬрд╛рд░реАрдХрд░рдг рд░
        рд╕рд╛рдореВрд╣рд┐рдХ рд╡рд┐рдХрд╛рд╕рдХрд╛ рдХреНрд╖реЗрддреНрд░рдорд╛ рдорд╣рддреНрддреНрд╡рдкреВрд░реНрдг рдХрд╛рд░реНрдп рдЧрд░рд┐рд░рд╣реЗрдХрд╛ рдЫрдиреНред рд╡рд┐рднрд┐рдиреНрди
        рдкреНрд░рдХрд╛рд░рдХрд╛ рдХреГрд╖рдХ рд╕рдореВрд╣, рдорд╣рд┐рд▓рд╛ рдХреГрд╖рдХ рд╕рдореВрд╣, рджрд▓рд┐рдд рдХреГрд╖рдХ рд╕рдореВрд╣, рдмрдЪрдд рд╕рдореВрд╣ рдЬрд╕реНрддрд╛
        рд╕рдВрдЧрдард┐рдд рд╕рдореВрд╣рд╣рд░реВрд▓реЗ рд╕реНрдерд╛рдиреАрдп рдЕрд░реНрдерддрдиреНрддреНрд░рдорд╛ рдпреЛрдЧрджрд╛рди рдкреБрд░реНтАНрдпрд╛рдЗрд░рд╣реЗрдХрд╛ рдЫрдиреНред
      </p>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-6">
        <div className="border rounded-lg p-6 bg-muted/30">
          <div className="text-4xl mb-3">{groupSummary[0]?.icon || "ЁЯМ▒"}</div>
          <h3 className="text-xl font-semibold mb-2">
            {groupSummary[0]?.type || ""}
          </h3>
          <p className="text-muted-foreground text-sm mb-4">
            рд▓рд┐рдЦреБ рдкрд┐рдХреЗрдорд╛ рд╕рдмреИрднрдиреНрджрд╛ рд▓реЛрдХрдкреНрд░рд┐рдп рдХреГрд╖рд┐ рд╕рдореВрд╣ рдкреНрд░рдХрд╛рд░, рдЬреБрди рдХреБрд▓ рд╕рдореВрд╣рдХреЛ
            {localizeNumber(
              groupSummary[0]?.percentage.toFixed(1) || "0",
              "ne",
            )}
            % рд╣рд┐рд╕реНрд╕рд╛ рдУрдЧрдЯреНрдЫред
          </p>
          <div className="flex justify-between items-center mt-2">
            <span>
              {localizeNumber(groupSummary[0]?.count.toString() || "0", "ne")}{" "}
              рд╕рдореВрд╣
            </span>
            <span className="text-sm px-2 py-1 rounded bg-primary/10 text-primary">
              рдкреНрд░рдореБрдЦ рдкреНрд░рдХрд╛рд░
            </span>
          </div>
        </div>

        <div className="border rounded-lg p-6 bg-muted/30">
          <div className="text-4xl mb-3">{groupSummary[1]?.icon || "ЁЯМ▒"}</div>
          <h3 className="text-xl font-semibold mb-2">
            {groupSummary[1]?.type || ""}
          </h3>
          <p className="text-muted-foreground text-sm mb-4">
            рджреЛрд╕реНрд░реЛ рд╕рдмреИрднрдиреНрджрд╛ рд▓реЛрдХрдкреНрд░рд┐рдп рдХреГрд╖рд┐ рд╕рдореВрд╣ рдкреНрд░рдХрд╛рд░, рдЬреБрди рдХреБрд▓ рд╕рдореВрд╣рдХреЛ
            {localizeNumber(
              groupSummary[1]?.percentage.toFixed(1) || "0",
              "ne",
            )}
            % рд╣рд┐рд╕реНрд╕рд╛ рдУрдЧрдЯреНрдЫред
          </p>
          <div className="flex justify-between items-center mt-2">
            <span>
              {localizeNumber(groupSummary[1]?.count.toString() || "0", "ne")}{" "}
              рд╕рдореВрд╣
            </span>
            <span className="text-sm px-2 py-1 rounded bg-secondary/10 text-secondary">
              рджреЛрд╕реНрд░реЛ рдкреНрд░рдХрд╛рд░
            </span>
          </div>
        </div>

        <div className="border rounded-lg p-6 bg-muted/30">
          <div className="text-4xl mb-3">ЁЯПЖ</div>
          <h3 className="text-xl font-semibold mb-2">рд╕рдмреИрднрдиреНрджрд╛ рд╕рдХреНрд░рд┐рдп рд╡рдбрд╛</h3>
          <p className="text-muted-foreground text-sm mb-4">
            рд╡рдбрд╛ рдирдВ.{" "}
            {localizeNumber(statistics.wardWithMostGroups.toString(), "ne")} рдорд╛
            рд╕рдмреИрднрдиреНрджрд╛ рдмрдвреА
            {localizeNumber(
              statistics.maximumGroupsInAWard.toString(),
              "ne",
            )}{" "}
            рд╕рдореВрд╣ рд╕рдХреНрд░рд┐рдп рдЫрдиреНред
          </p>
          <div className="flex justify-between items-center mt-2">
            <span>
              рдореБрдЦреНрдп рд╕рдореВрд╣:{" "}
              {popularGroupByWard.find(
                (w) => w.wardNumber === statistics.wardWithMostGroups,
              )?.mostCommonType || ""}
            </span>
            <span className="text-sm px-2 py-1 rounded bg-blue-500/10 text-blue-600">
              рдЕрдЧреНрд░рдгреА рд╡рдбрд╛
            </span>
          </div>
        </div>
      </div>

      <h2 id="economic-impact" className="scroll-m-20 border-b pb-2 mt-12">
        рдЖрд░реНрдерд┐рдХ рдкреНрд░рднрд╛рд╡
      </h2>

      <div
        className="mt-8 flex flex-wrap gap-4 justify-center"
        {...seoAttributes}
      >
        <div className="bg-muted/50 rounded-lg p-4 text-center min-w-[200px] border">
          <h4 className="text-lg font-medium mb-2">рдХреБрд▓ рд╕рдореВрд╣</h4>
          <p className="text-3xl font-bold">
            {localizeNumber(totalGroups.toString(), "ne")}
          </p>
          <p className="text-sm text-muted-foreground mt-2">
            рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣
          </p>
        </div>

        <div className="bg-muted/50 rounded-lg p-4 text-center min-w-[200px] border">
          <h4 className="text-lg font-medium mb-2">рд╕рдХреНрд░рд┐рдп рд╡рдбрд╛</h4>
          <p className="text-3xl font-bold">
            {localizeNumber(statistics.totalWards.toString(), "ne")}/реп
          </p>
          <p className="text-sm text-muted-foreground mt-2">
            рдХреГрд╖рд┐ рд╕рдореВрд╣ рднрдПрдХрд╛ рд╡рдбрд╛
          </p>
        </div>

        <div className="bg-muted/50 rounded-lg p-4 text-center min-w-[200px] border">
          <h4 className="text-lg font-medium mb-2">рд╕рдореВрд╣ рдкреНрд░рдХрд╛рд░</h4>
          <p className="text-3xl font-bold">
            {localizeNumber(groupTypesCount.toString(), "ne")}
          </p>
          <p className="text-sm text-muted-foreground mt-2">
            рд╡рд┐рднрд┐рдиреНрди рд╕рдореВрд╣ рдкреНрд░рдХрд╛рд░
          </p>
        </div>
      </div>

      <div className="bg-muted/50 p-6 rounded-lg mt-8 border">
        <h3 className="text-xl font-medium mb-6">
          рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВрдХреЛ рд╡рд┐рд╕реНрддреГрдд рд╡рд┐рд╢реНрд▓реЗрд╖рдг
          <span className="sr-only">
            Detailed Agriculture Related Groups Analysis of Khajura
          </span>
        </h3>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-card p-4 rounded border">
            <h4 className="font-medium mb-2">
              рдкреНрд░рдореБрдЦ рд╕рдореВрд╣ рдкреНрд░рдХрд╛рд░
              <span className="sr-only">
                Main Group Types in Khajura metropolitan city
              </span>
            </h4>
            {primaryGroup && (
              <div className="flex items-center gap-3">
                <div
                  className="w-4 h-16 rounded"
                  style={{ backgroundColor: "#3498db" }}
                ></div>
                <div>
                  <p className="text-2xl font-bold flex items-center gap-2">
                    {primaryGroup.icon} {primaryGroup.type}
                  </p>
                  <p className="text-sm text-muted-foreground mt-1">
                    {localizeNumber(primaryGroup.count.toString(), "ne")} рд╕рдореВрд╣ (
                    {localizeNumber(primaryGroup.percentage.toFixed(1), "ne")}%)
                  </p>
                </div>
              </div>
            )}

            <div className="mt-4">
              {/* Top 3 group types visualization */}
              {groupSummary.slice(0, 3).map((group, index) => (
                <div key={index} className="mt-3">
                  <div className="flex justify-between text-sm">
                    <span className="flex items-center gap-2">
                      <span>{group.icon}</span>
                      <span>{group.type}</span>
                    </span>
                    <span className="font-medium">
                      {localizeNumber(group.percentage.toFixed(1), "ne")}%
                    </span>
                  </div>
                  <div className="w-full bg-muted h-2 rounded-full mt-1 overflow-hidden">
                    <div
                      className="h-full rounded-full"
                      style={{
                        width: `${Math.min(group.percentage, 100)}%`,
                        backgroundColor:
                          ["#3498db", "#2ecc71", "#9b59b6"][index] || "#95a5a6",
                      }}
                    ></div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          <div className="bg-card p-4 rounded border">
            <h4 className="font-medium mb-2">рд╡рдбрд╛рдЧрдд рд╡рд┐рддрд░рдг рд╡рд┐рд╢реНрд▓реЗрд╖рдг</h4>

            <div className="space-y-3">
              <div>
                <div className="flex justify-between text-sm">
                  <span>рд╕рдмреИрднрдиреНрджрд╛ рдмрдвреА рд╕рдореВрд╣</span>
                  <span className="font-medium">
                    рд╡рдбрд╛ рдирдВ.{" "}
                    {localizeNumber(
                      statistics.wardWithMostGroups.toString(),
                      "ne",
                    )}
                  </span>
                </div>
                <div className="w-full bg-muted h-2 rounded-full mt-1 overflow-hidden">
                  <div
                    className="h-full rounded-full"
                    style={{
                      width: `${(statistics.maximumGroupsInAWard / totalGroups) * 100}%`,
                      backgroundColor:
                        WARD_COLORS[statistics.wardWithMostGroups] || "#3498db",
                    }}
                  ></div>
                </div>
                <div className="flex justify-between text-xs text-muted-foreground mt-1">
                  <span>
                    {localizeNumber(
                      statistics.maximumGroupsInAWard.toString(),
                      "ne",
                    )}{" "}
                    рд╕рдореВрд╣
                  </span>
                  <span>
                    рдХреБрд▓ рдХреЛ{" "}
                    {localizeNumber(
                      (
                        (statistics.maximumGroupsInAWard / totalGroups) *
                        100
                      ).toFixed(1),
                      "ne",
                    )}
                    %
                  </span>
                </div>
              </div>

              <div>
                <div className="flex justify-between text-sm">
                  <span>рдирд┐рд╖реНрдХреНрд░рд┐рдп рд╡рдбрд╛</span>
                  <span className="font-medium">
                    {localizeNumber(wardsWithNoGroups.length.toString(), "ne")}{" "}
                    рд╡рдбрд╛
                  </span>
                </div>
                <div className="w-full bg-muted h-2 rounded-full mt-1 overflow-hidden">
                  <div
                    className="h-full rounded-full bg-red-500"
                    style={{
                      width: `${(wardsWithNoGroups.length / farmsByWard.length) * 100}%`,
                    }}
                  ></div>
                </div>
              </div>
            </div>

            <div className="mt-6 pt-4 border-t">
              <h5 className="font-medium mb-3">рд╡рдбрд╛рдЧрдд рд╕рдордиреНрд╡рдп рд╕реВрдЪрдХ</h5>
              <div className="flex justify-between items-center">
                <div>
                  <div className="text-lg font-bold">
                    {localizeNumber((inequalityIndex * 100).toFixed(1), "ne")}%
                  </div>
                  <div className="text-xs text-muted-foreground">
                    рд╡рд┐рддрд░рдг рдЕрд╕рдорд╛рдирддрд╛ рд╕реВрдЪрдХ
                  </div>
                </div>
                <div className="text-right">
                  <div className="text-lg font-bold">
                    {localizeNumber((groupEvenness * 100).toFixed(1), "ne")}%
                  </div>
                  <div className="text-xs text-muted-foreground">
                    рд╕рдореВрд╣ рд╡рд┐рд╡рд┐рдзрддрд╛ рд╕реВрдЪрдХ
                  </div>
                </div>
              </div>

              <div className="mt-4 text-xs text-muted-foreground">
                <p>
                  рд╡рд┐рддрд░рдг рдЕрд╕рдорд╛рдирддрд╛ рд╕реВрдЪрдХ {(inequalityIndex * 100).toFixed(1)}%
                  рднрдПрдХреЛрд▓реЗ рд╡рдбрд╛рдЧрдд рд░реВрдкрдорд╛ рд╕рдореВрд╣рд╣рд░реВ
                  {inequalityIndex > 0.5 ? " рдЕрд╕рдорд╛рди " : " рд╕рдиреНрддреБрд▓рд┐рдд "}
                  рд╡рд┐рддрд░рдг рднрдПрдХреЛ рджреЗрдЦрд╛рдЙрдБрдЫред
                </p>
              </div>
            </div>
          </div>
        </div>

        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-card p-4 rounded border">
            <h4 className="font-medium mb-4">рд╡рд┐рд╕реНрддреГрдд рд╡рд┐рд╢реНрд▓реЗрд╖рдг</h4>
            <ul className="space-y-2 text-sm">
              <li className="flex gap-2">
                <span className="text-amber-500">тАв</span>
                <span>
                  <strong>рд╕рдореВрд╣ рд╡рд┐рддрд░рдг:</strong> рдкрд╛рд▓рд┐рдХрд╛рдорд╛ рд╕рдмреИрднрдиреНрджрд╛ рдмрдвреА
                  {primaryGroup?.type ? ` ${primaryGroup.type} ` : " "}
                  рд╕рдореВрд╣рд╣рд░реВ (
                  {localizeNumber(
                    primaryGroup?.percentage.toFixed(1) || "0",
                    "ne",
                  )}
                  %) рд░ рддреНрдпрд╕рдкрдЫрд┐
                  {secondaryGroup?.type ? ` ${secondaryGroup.type} ` : " "}(
                  {localizeNumber(
                    secondaryGroup?.percentage.toFixed(1) || "0",
                    "ne",
                  )}
                  %) рд╕рдореВрд╣рд╣рд░реВ рд░рд╣реЗрдХрд╛ рдЫрдиреНред
                </span>
              </li>
              <li className="flex gap-2">
                <span className="text-blue-500">тАв</span>
                <span>
                  <strong>рд╡рдбрд╛рдЧрдд рд╡рд┐рддрд░рдг:</strong> рд╡рдбрд╛ рдирдВ.{" "}
                  {localizeNumber(
                    statistics.wardWithMostGroups.toString(),
                    "ne",
                  )}
                  рдорд╛ рд╕рдмреИрднрдиреНрджрд╛ рдмрдвреА{" "}
                  {localizeNumber(
                    statistics.maximumGroupsInAWard.toString(),
                    "ne",
                  )}{" "}
                  рд╕рдореВрд╣рд╣рд░реВ рд░рд╣реЗрдХрд╛ рдЫрдиреН, рдЬреБрди рдХреБрд▓ рд╕рдореВрд╣рд╣рд░реВрдХреЛ{" "}
                  {localizeNumber(
                    (
                      (statistics.maximumGroupsInAWard / totalGroups) *
                      100
                    ).toFixed(1),
                    "ne",
                  )}
                  % рд╣реЛред
                </span>
              </li>
              <li className="flex gap-2">
                <span className="text-green-500">тАв</span>
                <span>
                  <strong>рд╕рдордЧреНрд░ рдЕрд╡рд╕реНрдерд╛:</strong> рдХреБрд▓ реп рд╡рдбрд╛ рдордзреНрдпреЗ{" "}
                  {localizeNumber(statistics.totalWards.toString(), "ne")} рд╡рдбрд╛рдорд╛
                  рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВ рд╕рдХреНрд░рд┐рдп рд░рд╣реЗрдХрд╛ рдЫрдиреНред рдФрд╕рддрдорд╛ рдкреНрд░рддрд┐ рд╡рдбрд╛{" "}
                  {localizeNumber(statistics.avgGroupsPerWard.toFixed(1), "ne")}
                  рд╕рдореВрд╣ рд░рд╣реЗрдХрд╛ рдЫрдиреНред
                </span>
              </li>
              <li className="flex gap-2">
                <span className="text-red-500">тАв</span>
                <span>
                  <strong>рд╕рдореВрд╣ рд╡рд┐рд╡рд┐рдзрддрд╛:</strong> рдкрд╛рд▓рд┐рдХрд╛рдорд╛{" "}
                  {localizeNumber(groupTypesCount.toString(), "ne")}
                  рдкреНрд░рдХрд╛рд░рдХрд╛ рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВ рд░рд╣реЗрдХрд╛ рдЫрдиреНред рд╕рдордЧреНрд░рдорд╛ рд╡рд┐рд╡рд┐рдзрддрд╛
                  рд╕реВрдЪрдХ {localizeNumber((groupEvenness * 100).toFixed(1), "ne")}%
                  рд░рд╣реЗрдХреЛ рдЫ, рдЬрд╕рд▓реЗ{" "}
                  {groupEvenness > 0.6
                    ? "рдЙрдЪреНрдЪ"
                    : groupEvenness > 0.4
                      ? "рдордзреНрдпрдо"
                      : "рдиреНрдпреБрди"}{" "}
                  рд╡рд┐рд╡рд┐рдзрддрд╛ рджреЗрдЦрд╛рдЙрдБрдЫред
                </span>
              </li>
            </ul>
          </div>

          <div className="bg-card p-4 rounded border">
            <h4 className="font-medium mb-4">рдЖрд░реНрдерд┐рдХ рдкреНрд░рднрд╛рд╡ рд╡рд┐рд╢реНрд▓реЗрд╖рдг</h4>

            <div className="space-y-4">
              <div>
                <h5 className="text-sm font-medium mb-1">рд╕рд╛рдореВрд╣рд┐рдХ рд╡рд┐рдХрд╛рд╕</h5>
                <p className="text-sm text-muted-foreground">
                  {localizeNumber(totalGroups.toString(), "ne")} рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд
                  рд╕рдореВрд╣рд╣рд░реВрд▓реЗ рдЕрдиреБрдорд╛рдирд┐рдд
                  {localizeNumber(
                    (totalGroups * 20).toString(),
                    "ne",
                  )} рджреЗрдЦрд┐ {localizeNumber((totalGroups * 30).toString(), "ne")}
                  рдШрд░рдкрд░рд┐рд╡рд╛рд░рд▓рд╛рдИ рдкреНрд░рддреНрдпрдХреНрд╖ рд▓рд╛рдн рджрд┐рдПрдХрд╛ рдЫрдиреНред
                </p>
              </div>

              <div>
                <h5 className="text-sm font-medium mb-1">
                  рд╕рд╛рдореВрд╣рд┐рдХ рдмрдЪрдд рд░ рд▓рдЧрд╛рдиреА
                </h5>
                <p className="text-sm text-muted-foreground">
                  рдкреНрд░рддрд┐ рд╕рдореВрд╣ рдФрд╕рдд рдорд╛рд╕рд┐рдХ рдмрдЪрдд рд░реБ. релрежреж рджреЗрдЦрд┐ реи,режрежреж рд╕рдореНрдо рд╣реБрдиреЗ рдЕрдиреБрдорд╛рди
                  рдЧрд░рд┐рдБрджрд╛, рд╡рд╛рд░реНрд╖рд┐рдХ рд╕рд╛рдореВрд╣рд┐рдХ рдмрдЪрдд рд░реБ.{" "}
                  {localizeNumber(
                    ((totalGroups * 500 * 12) / 100000).toFixed(2),
                    "ne",
                  )}
                  рд▓рд╛рдЦрджреЗрдЦрд┐ рд░реБ.{" "}
                  {localizeNumber(
                    ((totalGroups * 2000 * 12) / 100000).toFixed(2),
                    "ne",
                  )}{" "}
                  рд▓рд╛рдЦрд╕рдореНрдо рд╣реБрдирд╕рдХреНрдЫред
                </p>
              </div>
            </div>

            <div className="mt-6 pt-4 border-t">
              <h5 className="font-medium mb-3">рд╕рдореНрдмрдиреНрдзрд┐рдд рддрдереНрдпрд╛рдЩреНрдХ</h5>
              <div className="flex flex-wrap gap-2">
                <Link
                  href="/profile/economics/municipality-wide-commercial-agricultural-animal-husbandry-farmers-group"
                  className="text-sm px-3 py-1 bg-muted rounded-full hover:bg-muted/80"
                >
                  рд╡реНрдпрд╛рд╡рд╕рд╛рдпрд┐рдХ рдХреГрд╖рд┐ рддрдерд╛ рдкрд╢реБрдкрд╛рд▓рди
                </Link>
                <Link
                  href="/profile/economics/agriculture-production"
                  className="text-sm px-3 py-1 bg-muted rounded-full hover:bg-muted/80"
                >
                  рдХреГрд╖рд┐ рдЙрддреНрдкрд╛рджрди
                </Link>
                <Link
                  href="/profile/demographics/occupation-distribution"
                  className="text-sm px-3 py-1 bg-muted rounded-full hover:bg-muted/80"
                >
                  рдкреЗрд╢рд╛рдЧрдд рд╡рд┐рддрд░рдг
                </Link>
              </div>
            </div>
          </div>
        </div>

        <div className="mt-6 pt-4 border-t">
          <h4 className="font-medium mb-4">рд╕рдореВрд╣ рдкреНрд░реЛрдлрд╛рдЗрд▓ рд╡рд┐рд╢реНрд▓реЗрд╖рдг</h4>
          <p className="text-sm">
            рдкреЛрдЦрд░рд╛ рдорд╣рд╛рдирдЧрд░рдкрд╛рд▓рд┐рдХрд╛рдорд╛ рд╕рдЮреНрдЪрд╛рд▓рд┐рдд рдХреГрд╖рд┐ рд╕рдореНрдмрдиреНрдзрд┐рдд рд╕рдореВрд╣рд╣рд░реВрд▓реЗ рд╕реНрдерд╛рдиреАрдп
            рдЕрд░реНрдерддрдиреНрддреНрд░рдорд╛ рдЙрд▓реНрд▓реЗрдЦрдиреАрдп рдпреЛрдЧрджрд╛рди рдкреБрд░реНтАНрдпрд╛рдЗрд░рд╣реЗрдХрд╛ рдЫрдиреНред{" "}
            {primaryGroup?.type} рд╕рдореВрд╣рд╣рд░реВрд▓реЗ рдкреНрд░рдореБрдЦ рд╣рд┐рд╕реНрд╕рд╛ рдУрдЧрдЯреЗрдХрд╛ рдЫрдиреНред рд╡рдбрд╛ рдирдВ.{" "}
            {localizeNumber(statistics.wardWithMostGroups.toString(), "ne")}
            рдорд╛ рд╕рдмреИрднрдиреНрджрд╛ рдмрдвреА рд╕рдореВрд╣ рд░рд╣рдиреБрд▓реЗ рдпрд╕ рдХреНрд╖реЗрддреНрд░рдорд╛ рдХреГрд╖рд┐ рд╡рд┐рдХрд╛рд╕рдХрд╛ рд▓рд╛рдЧрд┐ рдердк рдЕрд╡рд╕рд░
            рд░рд╣реЗрдХреЛ рджреЗрдЦрд╛рдЙрдБрдЫред рдЖрдЧрд╛рдореА рджрд┐рдирдорд╛ рдирд┐рд╖реНрдХреНрд░рд┐рдп рд╡рдбрд╛рд╣рд░реВрдорд╛ рд▓рдХреНрд╖рд┐рдд рдХрд╛рд░реНрдпрдХреНрд░рдо рд░
            рдХреНрд╖рдорддрд╛ рд╡рд┐рдХрд╛рд╕рдорд╛ рдЬреЛрдб рджрд┐рдиреБрдкрд░реНрдиреЗ рджреЗрдЦрд┐рдиреНрдЫред
          </p>
        </div>
      </div>
    </>
  );
}
